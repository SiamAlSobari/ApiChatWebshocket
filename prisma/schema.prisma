// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  user_name String @unique
  hash_password String

  profile Profile?
  chats ChatUser[]
  messages Message[]
}

model Profile {
  id String @id @default(uuid())
  user_id String @unique
  first_name String
  last_name String
  avatar_url String @default("https://hwchamber.co.uk/wp-content/uploads/2022/04/avatar-placeholder.gif")

  user User @relation(fields: [user_id], references: [id])
}

enum CHAT_TYPE {
  GROUP
  ONE_TO_ONE
}

model Chat {
  id String @id @default(uuid())
  type CHAT_TYPE
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  users ChatUser[]
  messages Message[]
}

model ChatUser {
  id String @id @default(uuid())
  chat_id String
  user_id String

  chat Chat @relation(fields: [chat_id], references: [id])
  user User @relation(fields: [user_id], references: [id])

  @@unique([chat_id, user_id])
}

model Message {
  id String @id @default(uuid())
  chat_id String
  sender_id String
  from String
  text String
  created_at DateTime @default(now())

  chat Chat @relation(fields: [chat_id], references: [id])
  user User @relation(fields: [sender_id], references: [id])
}